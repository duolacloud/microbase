// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/search/search.proto

package search // import "duolacloud.com/duolacloud/microbase/proto/search"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import pagination "github.com/duolacloud/microbase/proto/pagination"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IndexExistsRequest struct {
	Index                string   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexExistsRequest) Reset()         { *m = IndexExistsRequest{} }
func (m *IndexExistsRequest) String() string { return proto.CompactTextString(m) }
func (*IndexExistsRequest) ProtoMessage()    {}
func (*IndexExistsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{0}
}
func (m *IndexExistsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexExistsRequest.Unmarshal(m, b)
}
func (m *IndexExistsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexExistsRequest.Marshal(b, m, deterministic)
}
func (dst *IndexExistsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexExistsRequest.Merge(dst, src)
}
func (m *IndexExistsRequest) XXX_Size() int {
	return xxx_messageInfo_IndexExistsRequest.Size(m)
}
func (m *IndexExistsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexExistsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexExistsRequest proto.InternalMessageInfo

func (m *IndexExistsRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type IndexExistsResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexExistsResponse) Reset()         { *m = IndexExistsResponse{} }
func (m *IndexExistsResponse) String() string { return proto.CompactTextString(m) }
func (*IndexExistsResponse) ProtoMessage()    {}
func (*IndexExistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{1}
}
func (m *IndexExistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexExistsResponse.Unmarshal(m, b)
}
func (m *IndexExistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexExistsResponse.Marshal(b, m, deterministic)
}
func (dst *IndexExistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexExistsResponse.Merge(dst, src)
}
func (m *IndexExistsResponse) XXX_Size() int {
	return xxx_messageInfo_IndexExistsResponse.Size(m)
}
func (m *IndexExistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexExistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndexExistsResponse proto.InternalMessageInfo

func (m *IndexExistsResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type PageRequest struct {
	Query                *pagination.PageQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Index                string                `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Type                 string                `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PageRequest) Reset()         { *m = PageRequest{} }
func (m *PageRequest) String() string { return proto.CompactTextString(m) }
func (*PageRequest) ProtoMessage()    {}
func (*PageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{2}
}
func (m *PageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageRequest.Unmarshal(m, b)
}
func (m *PageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageRequest.Marshal(b, m, deterministic)
}
func (dst *PageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageRequest.Merge(dst, src)
}
func (m *PageRequest) XXX_Size() int {
	return xxx_messageInfo_PageRequest.Size(m)
}
func (m *PageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PageRequest proto.InternalMessageInfo

func (m *PageRequest) GetQuery() *pagination.PageQuery {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *PageRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *PageRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type PageResponse struct {
	Total                int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Documents            []*Document `protobuf:"bytes,2,rep,name=documents,proto3" json:"documents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PageResponse) Reset()         { *m = PageResponse{} }
func (m *PageResponse) String() string { return proto.CompactTextString(m) }
func (*PageResponse) ProtoMessage()    {}
func (*PageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{3}
}
func (m *PageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageResponse.Unmarshal(m, b)
}
func (m *PageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageResponse.Marshal(b, m, deterministic)
}
func (dst *PageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageResponse.Merge(dst, src)
}
func (m *PageResponse) XXX_Size() int {
	return xxx_messageInfo_PageResponse.Size(m)
}
func (m *PageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PageResponse proto.InternalMessageInfo

func (m *PageResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PageResponse) GetDocuments() []*Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

type ConnectionRequest struct {
	Query                *pagination.ConnectionQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Index                string                      `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Type                 string                      `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ConnectionRequest) Reset()         { *m = ConnectionRequest{} }
func (m *ConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectionRequest) ProtoMessage()    {}
func (*ConnectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{4}
}
func (m *ConnectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionRequest.Unmarshal(m, b)
}
func (m *ConnectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionRequest.Marshal(b, m, deterministic)
}
func (dst *ConnectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionRequest.Merge(dst, src)
}
func (m *ConnectionRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectionRequest.Size(m)
}
func (m *ConnectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionRequest proto.InternalMessageInfo

func (m *ConnectionRequest) GetQuery() *pagination.ConnectionQuery {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *ConnectionRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *ConnectionRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ListRequest struct {
	Query                *pagination.ListQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Index                string                `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Type                 string                `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{5}
}
func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (dst *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(dst, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetQuery() *pagination.ListQuery {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *ListRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *ListRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ListResponse struct {
	Documents            []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	Total                int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	HasNext              bool        `protobuf:"varint,3,opt,name=hasNext,proto3" json:"hasNext,omitempty"`
	HasPrevious          bool        `protobuf:"varint,4,opt,name=hasPrevious,proto3" json:"hasPrevious,omitempty"`
	StartCursor          string      `protobuf:"bytes,5,opt,name=startCursor,proto3" json:"startCursor,omitempty"`
	EndCursor            string      `protobuf:"bytes,6,opt,name=endCursor,proto3" json:"endCursor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{6}
}
func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (dst *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(dst, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetDocuments() []*Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

func (m *ListResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListResponse) GetHasNext() bool {
	if m != nil {
		return m.HasNext
	}
	return false
}

func (m *ListResponse) GetHasPrevious() bool {
	if m != nil {
		return m.HasPrevious
	}
	return false
}

func (m *ListResponse) GetStartCursor() string {
	if m != nil {
		return m.StartCursor
	}
	return ""
}

func (m *ListResponse) GetEndCursor() string {
	if m != nil {
		return m.EndCursor
	}
	return ""
}

type Index struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mapping              string   `protobuf:"bytes,2,opt,name=mapping,proto3" json:"mapping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Index) Reset()         { *m = Index{} }
func (m *Index) String() string { return proto.CompactTextString(m) }
func (*Index) ProtoMessage()    {}
func (*Index) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{7}
}
func (m *Index) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Index.Unmarshal(m, b)
}
func (m *Index) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Index.Marshal(b, m, deterministic)
}
func (dst *Index) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Index.Merge(dst, src)
}
func (m *Index) XXX_Size() int {
	return xxx_messageInfo_Index.Size(m)
}
func (m *Index) XXX_DiscardUnknown() {
	xxx_messageInfo_Index.DiscardUnknown(m)
}

var xxx_messageInfo_Index proto.InternalMessageInfo

func (m *Index) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Index) GetMapping() string {
	if m != nil {
		return m.Mapping
	}
	return ""
}

type FieldConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Analyzer             string   `protobuf:"bytes,3,opt,name=analyzer,proto3" json:"analyzer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldConfig) Reset()         { *m = FieldConfig{} }
func (m *FieldConfig) String() string { return proto.CompactTextString(m) }
func (*FieldConfig) ProtoMessage()    {}
func (*FieldConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{8}
}
func (m *FieldConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldConfig.Unmarshal(m, b)
}
func (m *FieldConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldConfig.Marshal(b, m, deterministic)
}
func (dst *FieldConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldConfig.Merge(dst, src)
}
func (m *FieldConfig) XXX_Size() int {
	return xxx_messageInfo_FieldConfig.Size(m)
}
func (m *FieldConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FieldConfig proto.InternalMessageInfo

func (m *FieldConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FieldConfig) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FieldConfig) GetAnalyzer() string {
	if m != nil {
		return m.Analyzer
	}
	return ""
}

type CreateIndexRequest struct {
	Index                *Index   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateIndexRequest) Reset()         { *m = CreateIndexRequest{} }
func (m *CreateIndexRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIndexRequest) ProtoMessage()    {}
func (*CreateIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{9}
}
func (m *CreateIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIndexRequest.Unmarshal(m, b)
}
func (m *CreateIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIndexRequest.Marshal(b, m, deterministic)
}
func (dst *CreateIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIndexRequest.Merge(dst, src)
}
func (m *CreateIndexRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIndexRequest.Size(m)
}
func (m *CreateIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIndexRequest proto.InternalMessageInfo

func (m *CreateIndexRequest) GetIndex() *Index {
	if m != nil {
		return m.Index
	}
	return nil
}

type DeleteIndexRequest struct {
	Index                string   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIndexRequest) Reset()         { *m = DeleteIndexRequest{} }
func (m *DeleteIndexRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIndexRequest) ProtoMessage()    {}
func (*DeleteIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{10}
}
func (m *DeleteIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIndexRequest.Unmarshal(m, b)
}
func (m *DeleteIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIndexRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIndexRequest.Merge(dst, src)
}
func (m *DeleteIndexRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIndexRequest.Size(m)
}
func (m *DeleteIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIndexRequest proto.InternalMessageInfo

func (m *DeleteIndexRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type Document struct {
	Index                string   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Fields               string   `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{11}
}
func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (dst *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(dst, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *Document) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Document) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

type BatchUpsertDocumentRequest struct {
	Document             []*Document `protobuf:"bytes,1,rep,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BatchUpsertDocumentRequest) Reset()         { *m = BatchUpsertDocumentRequest{} }
func (m *BatchUpsertDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*BatchUpsertDocumentRequest) ProtoMessage()    {}
func (*BatchUpsertDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{12}
}
func (m *BatchUpsertDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpsertDocumentRequest.Unmarshal(m, b)
}
func (m *BatchUpsertDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpsertDocumentRequest.Marshal(b, m, deterministic)
}
func (dst *BatchUpsertDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpsertDocumentRequest.Merge(dst, src)
}
func (m *BatchUpsertDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_BatchUpsertDocumentRequest.Size(m)
}
func (m *BatchUpsertDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpsertDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpsertDocumentRequest proto.InternalMessageInfo

func (m *BatchUpsertDocumentRequest) GetDocument() []*Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type BatchUpsertDocumentResponse struct {
	Items                []*UpsertDocumentResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *BatchUpsertDocumentResponse) Reset()         { *m = BatchUpsertDocumentResponse{} }
func (m *BatchUpsertDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*BatchUpsertDocumentResponse) ProtoMessage()    {}
func (*BatchUpsertDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{13}
}
func (m *BatchUpsertDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpsertDocumentResponse.Unmarshal(m, b)
}
func (m *BatchUpsertDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpsertDocumentResponse.Marshal(b, m, deterministic)
}
func (dst *BatchUpsertDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpsertDocumentResponse.Merge(dst, src)
}
func (m *BatchUpsertDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_BatchUpsertDocumentResponse.Size(m)
}
func (m *BatchUpsertDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpsertDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpsertDocumentResponse proto.InternalMessageInfo

func (m *BatchUpsertDocumentResponse) GetItems() []*UpsertDocumentResponse {
	if m != nil {
		return m.Items
	}
	return nil
}

type UpsertDocumentResponse struct {
	Ack                  bool     `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertDocumentResponse) Reset()         { *m = UpsertDocumentResponse{} }
func (m *UpsertDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertDocumentResponse) ProtoMessage()    {}
func (*UpsertDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{14}
}
func (m *UpsertDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertDocumentResponse.Unmarshal(m, b)
}
func (m *UpsertDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertDocumentResponse.Marshal(b, m, deterministic)
}
func (dst *UpsertDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertDocumentResponse.Merge(dst, src)
}
func (m *UpsertDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertDocumentResponse.Size(m)
}
func (m *UpsertDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertDocumentResponse proto.InternalMessageInfo

func (m *UpsertDocumentResponse) GetAck() bool {
	if m != nil {
		return m.Ack
	}
	return false
}

type GetDocumentRequest struct {
	Index                string   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDocumentRequest) Reset()         { *m = GetDocumentRequest{} }
func (m *GetDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*GetDocumentRequest) ProtoMessage()    {}
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{15}
}
func (m *GetDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentRequest.Unmarshal(m, b)
}
func (m *GetDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentRequest.Marshal(b, m, deterministic)
}
func (dst *GetDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentRequest.Merge(dst, src)
}
func (m *GetDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_GetDocumentRequest.Size(m)
}
func (m *GetDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentRequest proto.InternalMessageInfo

func (m *GetDocumentRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *GetDocumentRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BatchGetDocumentRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGetDocumentRequest) Reset()         { *m = BatchGetDocumentRequest{} }
func (m *BatchGetDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetDocumentRequest) ProtoMessage()    {}
func (*BatchGetDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{16}
}
func (m *BatchGetDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetDocumentRequest.Unmarshal(m, b)
}
func (m *BatchGetDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetDocumentRequest.Marshal(b, m, deterministic)
}
func (dst *BatchGetDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetDocumentRequest.Merge(dst, src)
}
func (m *BatchGetDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetDocumentRequest.Size(m)
}
func (m *BatchGetDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetDocumentRequest proto.InternalMessageInfo

func (m *BatchGetDocumentRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type BatchGetDocumentResponse struct {
	Documents            []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BatchGetDocumentResponse) Reset()         { *m = BatchGetDocumentResponse{} }
func (m *BatchGetDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetDocumentResponse) ProtoMessage()    {}
func (*BatchGetDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{17}
}
func (m *BatchGetDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetDocumentResponse.Unmarshal(m, b)
}
func (m *BatchGetDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetDocumentResponse.Marshal(b, m, deterministic)
}
func (dst *BatchGetDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetDocumentResponse.Merge(dst, src)
}
func (m *BatchGetDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetDocumentResponse.Size(m)
}
func (m *BatchGetDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetDocumentResponse proto.InternalMessageInfo

func (m *BatchGetDocumentResponse) GetDocuments() []*Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

type SearchRequest struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	CurrentPage          int32    `protobuf:"varint,2,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	PageSize             int32    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{18}
}
func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (dst *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(dst, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *SearchRequest) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *SearchRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type SearchResponse struct {
	Documents            []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	Total                int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{19}
}
func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (dst *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(dst, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetDocuments() []*Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

func (m *SearchResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type DeleteDocumentRequest struct {
	Index                string   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentRequest) Reset()         { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()    {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{20}
}
func (m *DeleteDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentRequest.Unmarshal(m, b)
}
func (m *DeleteDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentRequest.Merge(dst, src)
}
func (m *DeleteDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentRequest.Size(m)
}
func (m *DeleteDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentRequest proto.InternalMessageInfo

func (m *DeleteDocumentRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *DeleteDocumentRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDocumentResponse struct {
	Ack                  bool     `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentResponse) Reset()         { *m = DeleteDocumentResponse{} }
func (m *DeleteDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentResponse) ProtoMessage()    {}
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_search_dbb59cd932b0a9a4, []int{21}
}
func (m *DeleteDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentResponse.Unmarshal(m, b)
}
func (m *DeleteDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentResponse.Merge(dst, src)
}
func (m *DeleteDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentResponse.Size(m)
}
func (m *DeleteDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentResponse proto.InternalMessageInfo

func (m *DeleteDocumentResponse) GetAck() bool {
	if m != nil {
		return m.Ack
	}
	return false
}

func init() {
	proto.RegisterType((*IndexExistsRequest)(nil), "search.IndexExistsRequest")
	proto.RegisterType((*IndexExistsResponse)(nil), "search.IndexExistsResponse")
	proto.RegisterType((*PageRequest)(nil), "search.PageRequest")
	proto.RegisterType((*PageResponse)(nil), "search.PageResponse")
	proto.RegisterType((*ConnectionRequest)(nil), "search.ConnectionRequest")
	proto.RegisterType((*ListRequest)(nil), "search.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "search.ListResponse")
	proto.RegisterType((*Index)(nil), "search.Index")
	proto.RegisterType((*FieldConfig)(nil), "search.FieldConfig")
	proto.RegisterType((*CreateIndexRequest)(nil), "search.CreateIndexRequest")
	proto.RegisterType((*DeleteIndexRequest)(nil), "search.DeleteIndexRequest")
	proto.RegisterType((*Document)(nil), "search.Document")
	proto.RegisterType((*BatchUpsertDocumentRequest)(nil), "search.BatchUpsertDocumentRequest")
	proto.RegisterType((*BatchUpsertDocumentResponse)(nil), "search.BatchUpsertDocumentResponse")
	proto.RegisterType((*UpsertDocumentResponse)(nil), "search.UpsertDocumentResponse")
	proto.RegisterType((*GetDocumentRequest)(nil), "search.GetDocumentRequest")
	proto.RegisterType((*BatchGetDocumentRequest)(nil), "search.BatchGetDocumentRequest")
	proto.RegisterType((*BatchGetDocumentResponse)(nil), "search.BatchGetDocumentResponse")
	proto.RegisterType((*SearchRequest)(nil), "search.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "search.SearchResponse")
	proto.RegisterType((*DeleteDocumentRequest)(nil), "search.DeleteDocumentRequest")
	proto.RegisterType((*DeleteDocumentResponse)(nil), "search.DeleteDocumentResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SearchServiceClient is the client API for SearchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchServiceClient interface {
	Create(ctx context.Context, in *Document, opts ...grpc.CallOption) (*empty.Empty, error)
	Upsert(ctx context.Context, in *Document, opts ...grpc.CallOption) (*empty.Empty, error)
	Update(ctx context.Context, in *Document, opts ...grpc.CallOption) (*empty.Empty, error)
	BatchUpsert(ctx context.Context, in *BatchUpsertDocumentRequest, opts ...grpc.CallOption) (*BatchUpsertDocumentResponse, error)
	Get(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*Document, error)
	BatchGet(ctx context.Context, in *BatchGetDocumentRequest, opts ...grpc.CallOption) (*BatchGetDocumentResponse, error)
	Delete(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Page(ctx context.Context, in *PageRequest, opts ...grpc.CallOption) (*PageResponse, error)
	// graphql 查询模式查询结果
	Connection(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (*pagination.Connection, error)
	CreateIndex(ctx context.Context, in *CreateIndexRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteIndex(ctx context.Context, in *DeleteIndexRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	IndexExists(ctx context.Context, in *IndexExistsRequest, opts ...grpc.CallOption) (*IndexExistsResponse, error)
}

type searchServiceClient struct {
	cc *grpc.ClientConn
}

func NewSearchServiceClient(cc *grpc.ClientConn) SearchServiceClient {
	return &searchServiceClient{cc}
}

func (c *searchServiceClient) Create(ctx context.Context, in *Document, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/search.SearchService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) Upsert(ctx context.Context, in *Document, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/search.SearchService/Upsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) Update(ctx context.Context, in *Document, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/search.SearchService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) BatchUpsert(ctx context.Context, in *BatchUpsertDocumentRequest, opts ...grpc.CallOption) (*BatchUpsertDocumentResponse, error) {
	out := new(BatchUpsertDocumentResponse)
	err := c.cc.Invoke(ctx, "/search.SearchService/BatchUpsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) Get(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/search.SearchService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) BatchGet(ctx context.Context, in *BatchGetDocumentRequest, opts ...grpc.CallOption) (*BatchGetDocumentResponse, error) {
	out := new(BatchGetDocumentResponse)
	err := c.cc.Invoke(ctx, "/search.SearchService/BatchGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) Delete(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/search.SearchService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/search.SearchService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/search.SearchService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) Page(ctx context.Context, in *PageRequest, opts ...grpc.CallOption) (*PageResponse, error) {
	out := new(PageResponse)
	err := c.cc.Invoke(ctx, "/search.SearchService/Page", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) Connection(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (*pagination.Connection, error) {
	out := new(pagination.Connection)
	err := c.cc.Invoke(ctx, "/search.SearchService/Connection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) CreateIndex(ctx context.Context, in *CreateIndexRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/search.SearchService/CreateIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) DeleteIndex(ctx context.Context, in *DeleteIndexRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/search.SearchService/DeleteIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) IndexExists(ctx context.Context, in *IndexExistsRequest, opts ...grpc.CallOption) (*IndexExistsResponse, error) {
	out := new(IndexExistsResponse)
	err := c.cc.Invoke(ctx, "/search.SearchService/IndexExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchServiceServer is the server API for SearchService service.
type SearchServiceServer interface {
	Create(context.Context, *Document) (*empty.Empty, error)
	Upsert(context.Context, *Document) (*empty.Empty, error)
	Update(context.Context, *Document) (*empty.Empty, error)
	BatchUpsert(context.Context, *BatchUpsertDocumentRequest) (*BatchUpsertDocumentResponse, error)
	Get(context.Context, *GetDocumentRequest) (*Document, error)
	BatchGet(context.Context, *BatchGetDocumentRequest) (*BatchGetDocumentResponse, error)
	Delete(context.Context, *DeleteDocumentRequest) (*empty.Empty, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
	Page(context.Context, *PageRequest) (*PageResponse, error)
	// graphql 查询模式查询结果
	Connection(context.Context, *ConnectionRequest) (*pagination.Connection, error)
	CreateIndex(context.Context, *CreateIndexRequest) (*empty.Empty, error)
	DeleteIndex(context.Context, *DeleteIndexRequest) (*empty.Empty, error)
	IndexExists(context.Context, *IndexExistsRequest) (*IndexExistsResponse, error)
}

func RegisterSearchServiceServer(s *grpc.Server, srv SearchServiceServer) {
	s.RegisterService(&_SearchService_serviceDesc, srv)
}

func _SearchService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Document)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Create(ctx, req.(*Document))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_Upsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Document)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Upsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/Upsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Upsert(ctx, req.(*Document))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Document)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Update(ctx, req.(*Document))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_BatchUpsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchUpsertDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).BatchUpsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/BatchUpsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).BatchUpsert(ctx, req.(*BatchUpsertDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Get(ctx, req.(*GetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_BatchGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).BatchGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/BatchGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).BatchGet(ctx, req.(*BatchGetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Delete(ctx, req.(*DeleteDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_Page_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Page(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/Page",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Page(ctx, req.(*PageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_Connection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Connection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/Connection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Connection(ctx, req.(*ConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_CreateIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).CreateIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/CreateIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).CreateIndex(ctx, req.(*CreateIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_DeleteIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).DeleteIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/DeleteIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).DeleteIndex(ctx, req.(*DeleteIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_IndexExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).IndexExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.SearchService/IndexExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).IndexExists(ctx, req.(*IndexExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SearchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "search.SearchService",
	HandlerType: (*SearchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SearchService_Create_Handler,
		},
		{
			MethodName: "Upsert",
			Handler:    _SearchService_Upsert_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _SearchService_Update_Handler,
		},
		{
			MethodName: "BatchUpsert",
			Handler:    _SearchService_BatchUpsert_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _SearchService_Get_Handler,
		},
		{
			MethodName: "BatchGet",
			Handler:    _SearchService_BatchGet_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _SearchService_Delete_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _SearchService_Search_Handler,
		},
		{
			MethodName: "List",
			Handler:    _SearchService_List_Handler,
		},
		{
			MethodName: "Page",
			Handler:    _SearchService_Page_Handler,
		},
		{
			MethodName: "Connection",
			Handler:    _SearchService_Connection_Handler,
		},
		{
			MethodName: "CreateIndex",
			Handler:    _SearchService_CreateIndex_Handler,
		},
		{
			MethodName: "DeleteIndex",
			Handler:    _SearchService_DeleteIndex_Handler,
		},
		{
			MethodName: "IndexExists",
			Handler:    _SearchService_IndexExists_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/search/search.proto",
}

func init() { proto.RegisterFile("proto/search/search.proto", fileDescriptor_search_dbb59cd932b0a9a4) }

var fileDescriptor_search_dbb59cd932b0a9a4 = []byte{
	// 922 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x6d, 0x73, 0xd3, 0x46,
	0x10, 0x4e, 0xec, 0xd8, 0xb1, 0x57, 0x81, 0x49, 0x8f, 0xc4, 0x35, 0x72, 0x5f, 0xd2, 0xe3, 0x0b,
	0x13, 0x5a, 0x7b, 0x1a, 0xca, 0x74, 0x32, 0xfd, 0x04, 0x86, 0x52, 0x18, 0x86, 0x12, 0xa5, 0xed,
	0x74, 0xfa, 0x85, 0xb9, 0x48, 0x17, 0xf9, 0x06, 0x5b, 0x27, 0x74, 0x27, 0x1a, 0xe7, 0x67, 0xf4,
	0x97, 0xf5, 0x27, 0x31, 0xf7, 0x66, 0xc9, 0x91, 0x6c, 0x20, 0xc3, 0x27, 0xdd, 0xed, 0x3d, 0xb7,
	0x2f, 0xcf, 0xed, 0x6a, 0x17, 0x6e, 0xa7, 0x19, 0x97, 0x7c, 0x24, 0x28, 0xc9, 0xc2, 0x89, 0xfd,
	0x0c, 0xb5, 0x0c, 0xb5, 0xcd, 0xce, 0x1f, 0xc4, 0x9c, 0xc7, 0x53, 0x3a, 0xd2, 0xd2, 0xb3, 0xfc,
	0x7c, 0x44, 0x67, 0xa9, 0x9c, 0x1b, 0x90, 0xff, 0x30, 0x66, 0x72, 0x92, 0x9f, 0x0d, 0x43, 0x3e,
	0x1b, 0x45, 0x39, 0x9f, 0x92, 0x70, 0xca, 0xf3, 0x68, 0x34, 0x63, 0x61, 0xc6, 0xcf, 0x88, 0xb0,
	0xb7, 0x46, 0x29, 0x89, 0x59, 0x42, 0x24, 0xe3, 0x49, 0x69, 0x69, 0x54, 0xe0, 0x43, 0x40, 0xcf,
	0x92, 0x88, 0x5e, 0x3c, 0xb9, 0x60, 0x42, 0x8a, 0x80, 0xbe, 0xcd, 0xa9, 0x90, 0x68, 0x0f, 0x5a,
	0x4c, 0x49, 0xfb, 0x9b, 0x07, 0x9b, 0x77, 0xbb, 0x81, 0xd9, 0xe0, 0x1f, 0xe0, 0xd6, 0x12, 0x56,
	0xa4, 0x3c, 0x11, 0x14, 0xf5, 0xa0, 0x4d, 0xb5, 0x44, 0xa3, 0x3b, 0x81, 0xdd, 0xe1, 0x08, 0xbc,
	0x57, 0x24, 0xa6, 0x4e, 0xe7, 0x3d, 0x68, 0xbd, 0xcd, 0x69, 0x36, 0xd7, 0x28, 0xef, 0x68, 0x7f,
	0x58, 0xf2, 0x45, 0xe1, 0x4e, 0xd4, 0x61, 0x60, 0x30, 0x85, 0x03, 0x8d, 0x92, 0x03, 0x08, 0xc1,
	0x96, 0x9c, 0xa7, 0xb4, 0xdf, 0xd4, 0x42, 0xbd, 0xc6, 0x7f, 0xc0, 0x8e, 0xb1, 0x62, 0xbd, 0xd9,
	0x83, 0x96, 0xe4, 0x92, 0x4c, 0xb5, 0x99, 0x66, 0x60, 0x36, 0x68, 0x08, 0xdd, 0x88, 0x87, 0xf9,
	0x8c, 0x26, 0x52, 0xf4, 0x1b, 0x07, 0xcd, 0xbb, 0xde, 0xd1, 0xee, 0xd0, 0x12, 0xfe, 0xd8, 0x1e,
	0x04, 0x05, 0x04, 0xa7, 0xf0, 0xc5, 0x98, 0x27, 0x09, 0x0d, 0x95, 0x7b, 0x2e, 0x82, 0x1f, 0x97,
	0x23, 0x18, 0x94, 0x23, 0x28, 0xd0, 0xd7, 0x8c, 0x23, 0x02, 0xef, 0x05, 0x13, 0xf2, 0x63, 0xd8,
	0x52, 0xb8, 0x6b, 0x5a, 0xf9, 0x7f, 0x13, 0x76, 0x8c, 0x19, 0x4b, 0xd7, 0x12, 0x31, 0x9b, 0x1f,
	0x24, 0xa6, 0xa0, 0xb7, 0x51, 0xa6, 0xb7, 0x0f, 0xdb, 0x13, 0x22, 0x5e, 0xd2, 0x0b, 0xa9, 0xad,
	0x75, 0x02, 0xb7, 0x45, 0x07, 0xe0, 0x4d, 0x88, 0x78, 0x95, 0xd1, 0x77, 0x8c, 0xe7, 0xa2, 0xbf,
	0xa5, 0x4f, 0xcb, 0x22, 0x85, 0x10, 0x92, 0x64, 0x72, 0x9c, 0x67, 0x82, 0x67, 0xfd, 0x96, 0xf6,
	0xb6, 0x2c, 0x42, 0x5f, 0x41, 0x97, 0x26, 0x91, 0x3d, 0x6f, 0xeb, 0xf3, 0x42, 0x80, 0x1f, 0x40,
	0xeb, 0x99, 0x8b, 0x37, 0x21, 0x33, 0x6a, 0x73, 0x56, 0xaf, 0x95, 0x63, 0x33, 0x92, 0xa6, 0x2c,
	0x89, 0x2d, 0x37, 0x6e, 0x8b, 0x4f, 0xc0, 0xfb, 0x95, 0xd1, 0x69, 0x34, 0xe6, 0xc9, 0x39, 0x8b,
	0x6b, 0x2f, 0x3b, 0x02, 0x1b, 0x05, 0x81, 0xc8, 0x87, 0x0e, 0x49, 0xc8, 0x74, 0x7e, 0x49, 0x33,
	0x4b, 0xec, 0x62, 0x8f, 0x8f, 0x01, 0x8d, 0x33, 0x4a, 0x24, 0xd5, 0xfe, 0xb8, 0x97, 0xbc, 0x53,
	0xae, 0x25, 0xef, 0xe8, 0x86, 0x63, 0xd7, 0x80, 0x6c, 0x69, 0x1d, 0x02, 0x7a, 0x4c, 0xa7, 0xf4,
	0xca, 0xd5, 0xfa, 0x32, 0x7c, 0x01, 0x1d, 0xf7, 0x32, 0xf5, 0x88, 0x5a, 0xc7, 0x7b, 0xd0, 0x3e,
	0x57, 0xf1, 0x0a, 0xeb, 0xb6, 0xdd, 0xe1, 0xe7, 0xe0, 0x3f, 0x22, 0x32, 0x9c, 0xfc, 0x99, 0x0a,
	0x9a, 0xc9, 0xc5, 0x93, 0x5b, 0x0f, 0xbe, 0x87, 0x8e, 0x7b, 0xfb, 0x95, 0xd9, 0xb1, 0x40, 0xe0,
	0x53, 0x18, 0xd4, 0xea, 0xb2, 0xb9, 0xf6, 0x13, 0xb4, 0x98, 0xa4, 0x33, 0x97, 0x67, 0xdf, 0x38,
	0x4d, 0xf5, 0xf0, 0xc0, 0x80, 0xf1, 0x21, 0xf4, 0x56, 0xe8, 0xdb, 0x85, 0x26, 0x09, 0xdf, 0xd8,
	0xbf, 0x8e, 0x5a, 0xe2, 0x97, 0x80, 0x9e, 0xd2, 0x4a, 0x10, 0x1f, 0x4f, 0xd2, 0x4d, 0x68, 0xb0,
	0xc8, 0x12, 0xd4, 0x60, 0x11, 0xbe, 0x07, 0x5f, 0xea, 0x80, 0x6a, 0x94, 0xee, 0x42, 0x93, 0x45,
	0x26, 0x94, 0x6e, 0xa0, 0x96, 0xf8, 0x39, 0xf4, 0xab, 0xe0, 0xeb, 0x95, 0x19, 0x66, 0x70, 0xe3,
	0x54, 0x9f, 0x3a, 0x73, 0x7d, 0xd8, 0x7e, 0x43, 0xe7, 0xff, 0xf2, 0x2c, 0xb2, 0x51, 0xb8, 0x2d,
	0xfa, 0x0e, 0x76, 0xc2, 0x3c, 0xcb, 0x68, 0x22, 0x5f, 0xa7, 0x24, 0x36, 0xf1, 0xb4, 0x02, 0xcf,
	0xca, 0xd4, 0xbf, 0x11, 0x0d, 0xa0, 0xab, 0x8e, 0x5e, 0x0b, 0x76, 0x69, 0x7e, 0x07, 0xad, 0xa0,
	0xa3, 0x04, 0xa7, 0xec, 0x92, 0xe2, 0xbf, 0xe0, 0xa6, 0x33, 0xf5, 0x39, 0xff, 0x09, 0xf8, 0x04,
	0xf6, 0x4d, 0x4a, 0x7f, 0xbe, 0xe7, 0x38, 0x84, 0xde, 0x55, 0x95, 0xab, 0x52, 0xe1, 0xe8, 0xbf,
	0x6d, 0x47, 0xe1, 0x29, 0xcd, 0xde, 0xb1, 0x50, 0xa5, 0x5f, 0xdb, 0x94, 0x27, 0xaa, 0x44, 0xe3,
	0xf7, 0x86, 0xa6, 0xcf, 0x0e, 0x5d, 0x9f, 0x1d, 0x3e, 0x51, 0x7d, 0x16, 0x6f, 0xa8, 0x5b, 0x26,
	0xfd, 0x3e, 0xfd, 0x56, 0xf4, 0xa9, 0xb6, 0xfe, 0x06, 0xaf, 0x54, 0x3f, 0x08, 0xbb, 0xab, 0xab,
	0x0b, 0xd4, 0xbf, 0xb3, 0x16, 0x63, 0xd8, 0xc1, 0x1b, 0xe8, 0x01, 0x34, 0x9f, 0x52, 0x89, 0x7c,
	0x87, 0xae, 0x26, 0xb4, 0x5f, 0x71, 0x14, 0x6f, 0xa0, 0xdf, 0xa1, 0xe3, 0x52, 0x1a, 0x7d, 0xbb,
	0x64, 0xa9, 0x46, 0xc1, 0xc1, 0x6a, 0xc0, 0xc2, 0x8f, 0x87, 0xd0, 0x36, 0x2f, 0x88, 0xbe, 0x5e,
	0x98, 0xab, 0x4b, 0x92, 0x35, 0x24, 0x1d, 0x43, 0xdb, 0xbc, 0x2b, 0xda, 0x77, 0x2a, 0x96, 0x4a,
	0xc5, 0xef, 0x5d, 0x15, 0x2f, 0xac, 0xdf, 0x87, 0x2d, 0xd5, 0xfc, 0xd0, 0x2d, 0x87, 0x28, 0x75,
	0x5c, 0x7f, 0x6f, 0x59, 0x58, 0xbe, 0xa4, 0x8b, 0x68, 0x71, 0xa9, 0x34, 0xd4, 0x14, 0x97, 0xca,
	0x33, 0x88, 0x8e, 0x13, 0x8a, 0x89, 0x00, 0xdd, 0x76, 0xa8, 0xca, 0x4c, 0xe1, 0xf7, 0xea, 0x87,
	0x08, 0xbc, 0x81, 0xc6, 0xe0, 0x95, 0xba, 0x49, 0xf1, 0x74, 0xd5, 0x16, 0xb3, 0x86, 0xac, 0x31,
	0x78, 0xa5, 0xbe, 0x52, 0x28, 0xa9, 0x36, 0x9b, 0x35, 0x4a, 0x7e, 0x03, 0xaf, 0x34, 0xf7, 0x15,
	0x4a, 0xaa, 0x83, 0xa3, 0x3f, 0xa8, 0x3d, 0x73, 0xb4, 0x3c, 0x3a, 0xfe, 0xe7, 0xe7, 0x62, 0x4e,
	0xfd, 0xd0, 0xd8, 0x6a, 0x34, 0xfd, 0x62, 0x3e, 0x67, 0x6d, 0x2d, 0xbc, 0xff, 0x3e, 0x00, 0x00,
	0xff, 0xff, 0xce, 0xba, 0xd5, 0x93, 0x34, 0x0b, 0x00, 0x00,
}

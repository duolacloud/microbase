syntax = "proto3";

// import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
// import "google/api/annotations.proto";
import "github.com/duolacloud/microbase/proto/pagination/pagination.proto";

package search;

option go_package = "duolacloud.com/duolacloud/microbase/proto/search;search";

service SearchService {
  rpc Create(Document) returns (google.protobuf.Empty) {}
  rpc Upsert(Document) returns (google.protobuf.Empty) {}
  rpc Update(Document) returns (google.protobuf.Empty) {}
  rpc BatchUpsert(BatchUpsertDocumentRequest) returns (BatchUpsertDocumentResponse) {}
  rpc Get(GetDocumentRequest) returns (Document) {}
  rpc BatchGet(BatchGetDocumentRequest) returns (BatchGetDocumentResponse) {}
  rpc Delete(DeleteDocumentRequest) returns (google.protobuf.Empty) {}

  rpc Search(SearchRequest) returns (SearchResponse) {}
  rpc List(ListRequest) returns (ListResponse) {}
  rpc Page(PageRequest) returns (PageResponse) {}

  // graphql 查询模式查询结果
  rpc Connection(ConnectionRequest) returns (pagination.Connection) {}


  rpc CreateIndex(CreateIndexRequest) returns (google.protobuf.Empty) {}
  rpc DeleteIndex(DeleteIndexRequest) returns (google.protobuf.Empty) {}
  rpc IndexExists(IndexExistsRequest) returns (IndexExistsResponse) {}
}

message IndexExistsRequest{
  string index = 1;
}

message IndexExistsResponse {
  bool exists = 1;
}

message PageRequest {
  pagination.PageQuery query = 1;
  string index = 2;
  string type = 3;
}

message PageResponse {
  int64 total = 1;
  repeated Document documents = 2;
}

message ConnectionRequest {
  pagination.ConnectionQuery query = 1;
  string index = 2;
  string type = 3;
}

message ListRequest {
  pagination.ListQuery query = 1;
  string index = 2;
  string type = 3;
}

message ListResponse {
  repeated Document documents = 1;
  int64 total = 2;
  bool hasNext = 3;
  bool hasPrevious = 4;
  string startCursor = 5;
  string endCursor = 6;
}

message Index {
  string name = 1;
  string mapping = 2;
}

message FieldConfig {
  string name = 1;
  string type = 2;
  string analyzer = 3;
}

message CreateIndexRequest {
  Index index = 1;
}

message DeleteIndexRequest {
  string index = 1;
}

message Document {
  string index = 1;
  string type = 2;
  string fields = 3;
}

message BatchUpsertDocumentRequest {
  repeated Document document = 1;
}

message BatchUpsertDocumentResponse {
  repeated UpsertDocumentResponse items = 1;
}

message UpsertDocumentResponse {
  bool ack = 1;
}

message GetDocumentRequest {
  string index = 1;
  string type = 2;
  string id = 3;
}

message BatchGetDocumentRequest {
  repeated string ids = 1;
}

message BatchGetDocumentResponse {
  repeated Document documents = 1;
}

message SearchRequest {
  string keyword = 1;
  int32 current_page = 2;
  int32 page_size = 3;
}

message SearchResponse {
  repeated Document documents = 1;
  int64 total = 2;
}

message DeleteDocumentRequest {
  string index = 1;
  string type = 2;
  string id = 3;
}

message DeleteDocumentResponse {
  bool ack = 1;
}
